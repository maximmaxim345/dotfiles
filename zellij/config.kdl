keybinds {
  normal {
    bind "p" {
      SwitchToMode "Pane"
    }
    bind "m" {
      SwitchToMode "Move"
    }
    bind "t" {
      SwitchToMode "Tab"
    }
    bind "r" {
      SwitchToMode "Resize"
    }
    bind "s" {
      SwitchToMode "Scroll"
    }
    bind "o" {
      SwitchToMode "Session"
    }
    bind "Alt g" {
      ToggleFocusFullscreen; SwitchToMode "locked";
    }
    unbind "Ctrl p"
    unbind "Ctrl h"
    unbind "Ctrl t"
    unbind "Ctrl s"
    unbind "Ctrl o"
    unbind "Ctrl n"
  }
  shared {
    unbind "Ctrl g"
    bind "Alt n" {
      NewPane "Right"
    }
    bind "Alt N" {
      NewPane "Down"
    }
    bind "Alt h" {
      MoveFocusOrTab "Left"
    }
    bind "Alt l" {
      MoveFocusOrTab "Right"
    }
    bind "Alt j" {
      MoveFocus "Down"
    }
    bind "Alt k" {
      MoveFocus "Up"
    }
    bind "Alt =" "Alt +" {
      Resize "Increase"
    }
    bind "Alt -" {
      Resize "Decrease"
    }
    // bind "Alt ," {
    //   PreviousSwapLayout 
    // }
    // bind "Alt ." {
    //   NextSwapLayout 
    // }
  }
  shared_except "locked" {
    bind "Esc" {
      SwitchToMode "Locked"
    }
  }
  locked {
    bind "Alt g" {
      SwitchToMode "Normal"
    }
  }
  normal {
    // uncomment this and adjust key if using copy_on_select=false
    bind "Alt c" { Copy; SwitchToMode "Locked"; }
    bind "Q" { Quit; }
    bind "d" { Detach; }
    bind "q" { 
      LaunchOrFocusPlugin "zj-quit" {
        floating true
      }
      SwitchToMode "Locked"
    }
    bind "Alt f" { ToggleFloatingPanes; SwitchToMode "Locked"; }
    bind "Alt h" {
      LaunchOrFocusPlugin "session-manager" {
        floating true
      }; SwitchToMode "Locked";
    }
    bind "Alt n" { NewPane; SwitchToMode "Locked"; }
    bind "Alt i" { MoveTab "Left"; SwitchToMode "Locked"; }
    bind "Alt o" { MoveTab "Right"; SwitchToMode "Locked"; }
    // bind "Alt h" "Alt Left" { MoveFocusOrTab "Left"; }
    // bind "Alt l" "Alt Right" { MoveFocusOrTab "Right"; }
    // bind "Alt j" "Alt Down" { MoveFocus "Down"; }
    // bind "Alt k" "Alt Up" { MoveFocus "Up"; }
    // bind "Alt =" "Alt +" { Resize "Increase"; }
    // bind "Alt -" { Resize "Decrease"; }
    // bind "Alt [" { PreviousSwapLayout; }
    // bind "Alt ]" { NextSwapLayout; }
    bind "h" {
      LaunchOrFocusPlugin "zellij_forgot" {
        "LOAD_ZELLIJ_BINDINGS" "true"
        // "buy eggs" "5x"
        // "learn rust" "5h"
        // "clean up code" "tomorrow"
        floating true
      }; SwitchToMode "Locked";
    }
  }
  locked {
    unbind "Ctrl g"
  }
  resize {
    unbind "Ctrl n"
    bind "h" "Left" { Resize "Increase Left"; }
    bind "j" "Down" { Resize "Increase Down"; }
    bind "k" "Up" { Resize "Increase Up"; }
    bind "l" "Right" { Resize "Increase Right"; }
    bind "H" { Resize "Decrease Left"; }
    bind "J" { Resize "Decrease Down"; }
    bind "K" { Resize "Decrease Up"; }
    bind "L" { Resize "Decrease Right"; }
    bind "=" "+" { Resize "Increase"; }
    bind "-" { Resize "Decrease"; }
  }
  pane {
    unbind "Ctrl p"
    bind "h" "Left" { MoveFocus "Left"; }
    bind "l" "Right" { MoveFocus "Right"; }
    bind "j" "Down" { MoveFocus "Down"; }
    bind "k" "Up" { MoveFocus "Up"; }
    bind "p" { SwitchFocus; SwitchToMode "locked"; }
    bind "n" { NewPane; SwitchToMode "locked"; }
    bind "d" { NewPane "Down"; SwitchToMode "locked"; }
    bind "r" { NewPane "Right"; SwitchToMode "locked"; }
    bind "x" { CloseFocus; SwitchToMode "locked"; }
    bind "f" { ToggleFocusFullscreen; SwitchToMode "locked"; }
    bind "z" { TogglePaneFrames; SwitchToMode "locked"; }
    bind "w" { ToggleFloatingPanes; SwitchToMode "locked"; }
    bind "e" { TogglePaneEmbedOrFloating; SwitchToMode "locked"; }
    bind "c" { SwitchToMode "RenamePane"; PaneNameInput 0;}
  }
  move {
    unbind "Ctrl h"
    bind "n" "Tab" { MovePane; }
    bind "p" { MovePaneBackwards; }
    bind "h" "Left" { MovePane "Left"; }
    bind "j" "Down" { MovePane "Down"; }
    bind "k" "Up" { MovePane "Up"; }
    bind "l" "Right" { MovePane "Right"; }
  }
  tab {
    unbind "Ctrl t"
    bind "r" { SwitchToMode "RenameTab"; TabNameInput 0; }
    bind "h" "Left" "Up" "k" { GoToPreviousTab; }
    bind "l" "Right" "Down" "j" { GoToNextTab; }
    bind "Left" { MoveTab "Left"; }
    bind "Right" { MoveTab "Right"; }
    bind "n" { NewTab; SwitchToMode "locked"; }
    bind "x" { CloseTab; SwitchToMode "locked"; }
    bind "s" { ToggleActiveSyncTab; SwitchToMode "locked"; }
    bind "b" { BreakPane; SwitchToMode "locked"; }
    bind "]" { BreakPaneRight; SwitchToMode "locked"; }
    bind "[" { BreakPaneLeft; SwitchToMode "locked"; }
    bind "Up" { BreakPaneLeft; }
    bind "Down" { BreakPaneRight; }
    bind "1" { GoToTab 1; SwitchToMode "locked"; }
    bind "2" { GoToTab 2; SwitchToMode "locked"; }
    bind "3" { GoToTab 3; SwitchToMode "locked"; }
    bind "4" { GoToTab 4; SwitchToMode "locked"; }
    bind "5" { GoToTab 5; SwitchToMode "locked"; }
    bind "6" { GoToTab 6; SwitchToMode "locked"; }
    bind "7" { GoToTab 7; SwitchToMode "locked"; }
    bind "8" { GoToTab 8; SwitchToMode "locked"; }
    bind "9" { GoToTab 9; SwitchToMode "locked"; }
    bind "Tab" { ToggleTab; }
  }
  scroll {
    unbind "Ctrl s"
    bind "e" { EditScrollback; SwitchToMode "locked"; }
    bind "s" { SwitchToMode "EnterSearch"; SearchInput 0; }
    bind "Ctrl c" { ScrollToBottom; SwitchToMode "locked"; }
    bind "j" "Down" { ScrollDown; }
    bind "k" "Up" { ScrollUp; }
    bind "Ctrl f" "PageDown" "Right" "l" { PageScrollDown; }
    bind "Ctrl b" "PageUp" "Left" "h" { PageScrollUp; }
    bind "d" { HalfPageScrollDown; }
    bind "u" { HalfPageScrollUp; }
    // uncomment this and adjust key if using copy_on_select=false
    bind "Alt c" { Copy; }
  }
  search {
    unbind "Ctrl s"
    bind "Ctrl c" { ScrollToBottom; SwitchToMode "locked"; }
    bind "j" "Down" { ScrollDown; }
    bind "k" "Up" { ScrollUp; }
    bind "Ctrl f" "PageDown" "Right" "l" { PageScrollDown; }
    bind "Ctrl b" "PageUp" "Left" "h" { PageScrollUp; }
    bind "d" { HalfPageScrollDown; }
    bind "u" { HalfPageScrollUp; }
    bind "n" { Search "down"; }
    bind "p" { Search "up"; }
    bind "c" { SearchToggleOption "CaseSensitivity"; }
    bind "w" { SearchToggleOption "Wrap"; }
    bind "o" { SearchToggleOption "WholeWord"; }
  }
  entersearch {
    bind "Ctrl c" "Esc" { SwitchToMode "Scroll"; }
    bind "Enter" { SwitchToMode "Search"; }
  }
  renametab {
    unbind "Ctrl c"
    bind "Esc" { UndoRenameTab; SwitchToMode "Tab"; }
  }
  renamepane {
    unbind "Ctrl c"
    bind "Esc" { UndoRenamePane; SwitchToMode "Pane"; }
  }
  session {
    unbind "Ctrl o"
    unbind "Enter"
    bind "Ctrl s" { SwitchToMode "Scroll"; }
    bind "d" { Detach; }
    bind "w" {
      LaunchOrFocusPlugin "session-manager" {
    floating true
    move_to_focused_tab true
      };
      SwitchToMode "locked"
    }
    bind "c" {
      LaunchOrFocusPlugin "configuration" {
        floating true
        move_to_focused_tab true
      };
      SwitchToMode "locked"
    }
    bind "p" {
      LaunchOrFocusPlugin "plugin-manager" {
        floating true
        move_to_focused_tab true
      };
      SwitchToMode "locked"
    }
  }

  "tmux" clear-defaults=true {}
}

// Plugin aliases - can be used to change the implementation of Zellij
// changing these requires a restart to take effect
plugins {
  tab-bar location="zellij:tab-bar"
  status-bar location="zellij:status-bar"
  strider location="zellij:strider"
  compact-bar location="zellij:compact-bar"
  session-manager location="zellij:session-manager"
  filepicker location="zellij:strider" {
  }
  configuration location="zellij:configuration"
  plugin-manager location="zellij:plugin-manager"
  zj-quit location="https://github.com/cristiand391/zj-quit/releases/download/0.3.1/zj-quit.wasm" {
    confirm_key "q"
    cancel_key "Esc"
  }
  zellij_forgot location="https://github.com/karimould/zellij-forgot/releases/download/0.4.1/zellij_forgot.wasm" {
  }
}

// Plugins to load in the background when a new session starts
load_plugins {
  zj-quit
  zellij_forgot
  session-manager
}

// Choose what to do when zellij receives SIGTERM, SIGINT, SIGQUIT or SIGHUP
// eg. when terminal window with an active zellij session is closed
// (Requires restart)
// Options:
//   - detach (Default)
//   - quit
//
// on_force_close "quit"

//  Send a request for a simplified ui (without arrow fonts) to plugins
//  Options:
//    - true
//    - false (Default)
//
simplified_ui true

// Choose the path to the default shell that zellij will use for opening new panes
// Default: $SHELL
//
// default_shell "fish"

// Choose the path to override cwd that zellij will use for opening new panes
//
// default_cwd ""

// Toggle between having pane frames around the panes
// Options:
//   - true (default)
//   - false
//
pane_frames false

// Toggle between having Zellij lay out panes according to a predefined set of layouts whenever possible
// Options:
//   - true (default)
//   - false
//
// auto_layout true

// Whether sessions should be serialized to the cache folder (including their tabs/panes, cwds and running commands) so that they can later be resurrected
// (Requires restart)
// Options:
//   - true (default)
//   - false
//
session_serialization true

// Whether pane viewports are serialized along with the session, default is false
// (Requires restart)
// Options:
//   - true
//   - false (default)
serialize_pane_viewport true

// Scrollback lines to serialize along with the pane viewport when serializing sessions, 0
// defaults to the scrollback size. If this number is higher than the scrollback size, it will
// also default to the scrollback size. This does nothing if `serialize_pane_viewport` is not true.
// (Requires restart)
//
// scrollback_lines_to_serialize 10000

// Define color themes for Zellij
// For more examples, see: https://github.com/zellij-org/zellij/tree/main/example/themes
// Once these themes are defined, one of them should to be selected in the "theme" section of this file
//
themes {
    nord {
        fg "#D8DEE9"
        bg "#2E3440"
        black "#3B4252"
        red "#BF616A"
        green "#A3BE8C"
        yellow "#EBCB8B"
        blue "#81A1C1"
        magenta "#B48EAD"
        cyan "#88C0D0"
        white "#E5E9F0"
        orange "#D08770"
    }
    ansi {
      fg 7
      bg 8
      red 1
      green 2
      yellow 3
      blue 4
      magenta 5
      orange 9
      cyan 6
      black 0
      white 15
    }
}

// Choose the theme that is specified in the themes section.
// Default: default
//
theme "ansi"

// The name of the default layout to load on startup
// Default: "default"
// (Requires restart)
//
default_layout "a"

// Choose the mode that zellij uses when starting up.
// Default: normal
//
default_mode "locked"

// Toggle enabling the mouse mode.
// On certain configurations, or terminals this could
// potentially interfere with copying text.
// (Requires restart)
// Options:
//   - true (default)
//   - false
//
mouse_mode true

// Configure the scroll back buffer size
// This is the number of lines zellij stores for each pane in the scroll back
// buffer. Excess number of lines are discarded in a FIFO fashion.
// (Requires restart)
// Valid values: positive integers
// Default value: 10000
//
// scroll_buffer_size 10000

// Provide a command to execute when copying text. The text will be piped to
// the stdin of the program to perform the copy. This can be used with
// terminal emulators which do not support the OSC 52 ANSI control sequence
// that will be used by default if this option is not set.
// Examples:
//
// copy_command "xclip -selection clipboard" // x11
// copy_command "wl-copy"                    // wayland
// copy_command "pbcopy"                     // osx

// Choose the destination for copied text
// Allows using the primary selection buffer (on x11/wayland) instead of the system clipboard.
// Does not apply when using copy_command.
// Options:
//   - system (default)
//   - primary
//
// copy_clipboard "primary"

// Enable or disable automatic copy (and clear) of selection when releasing mouse
// Default: true
//
copy_on_select false

// Path to the default editor to use to edit pane scrollbuffer
// Default: $EDITOR or $VISUAL
//
// scrollback_editor "/usr/bin/vim"

// When attaching to an existing session with other users,
// should the session be mirrored (true)
// or should each user have their own cursor (false)
// (Requires restart)
// Default: false
//
// mirror_session true

// The folder in which Zellij will look for layouts
// (Requires restart)
//
// layout_dir "/path/to/my/layout_dir"

// The folder in which Zellij will look for themes
// (Requires restart)
//
// theme_dir "/path/to/my/theme_dir"

// Enable or disable the rendering of styled and colored underlines (undercurl).
// May need to be disabled for certain unsupported terminals
// (Requires restart)
// Default: true
//
// styled_underlines false

// Enable or disable writing of session metadata to disk (if disabled, other sessions might not know
// metadata info on this session)
// (Requires restart)
// Default: false
//
disable_session_metadata false

// Enable or disable support for the enhanced Kitty Keyboard Protocol (the host terminal must also support it)
// (Requires restart)
// Default: true (if the host terminal supports it)
//
// support_kitty_keyboard_protocol false
